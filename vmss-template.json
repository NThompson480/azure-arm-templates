{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String"
        },
        "vmssName": {
            "type": "String"
        },
        "vmSku": {
            "type": "String"
        },
        "adminUsername": {
            "type": "String"
        },
        "instanceCount": {
            "type": "String"
        },
        "image": {
            "type": "Object"
        },
        "singlePlacementGroup": {
            "type": "String"
        },
        "pipName": {
            "type": "String"
        },
        "pipLabel": {
            "type": "String"
        },
        "skuType": {
            "type": "String"
        },
        "ipAllocationMethod": {
            "type": "String"
        },
        "priority": {
            "type": "String"
        },
        "subnetId": {
            "type": "String"
        },
        "enableAcceleratedNetworking": {
            "type": "String"
        },
        "publicIpAddressPerInstance": {
            "type": "String"
        },
        "upgradeMode": {
            "type": "String"
        },
        "evictionPolicy": {
            "type": "String"
        },
        "adminPassword": {
            "type": "SecureString"
        },
        "zones": {
            "type": "Array"
        },
        "zoneBalance": {
            "type": "String"
        },
        "spreadingAlgorithmPlatformFaultDomainCount": {
            "type": "String"
        },
        "vnetName": {
            "type": "String"
        },
        "networkSecurityGroupName": {
            "type": "String"
        }
    },
    "variables": {
        "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
        "networkApiVersion": "2018-01-01",
        "storageApiVersion": "2019-06-01",
        "computeApiVersion": "2019-07-01",
        "autoscaleApiVersion": "2015-04-01",
        "loadBalancerName": "[concat(parameters('vmssName'), 'lb')]",
        "loadBalancerId": "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "[variables('networkApiVersion')]",
            "name": "[parameters('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "subnets": [
                    {
                        "name": "default",
                        "id": "/subscriptions/a9827c18-8954-49e6-805f-3b9bf28e9f4a/resourceGroups/vm-ss/providers/Microsoft.Network/virtualNetworks/WFE/subnets/default",
                        "properties": {
                            "addressPrefix": "10.2.0.0/28"
                        }
                    }
                ],
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/28"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "[variables('networkApiVersion')]",
            "name": "[parameters('pipName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('skuType')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('ipAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('pipLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "[variables('networkApiVersion')]",
            "name": "[variables('loadBalancerName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('pipName'))]"
            ],
            "sku": {
                "name": "[parameters('skuType')]"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('pipName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "bepool"
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "natpool",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('loadBalancerId'), '/frontendIPConfigurations/loadBalancerFrontEnd')]"
                            },
                            "protocol": "tcp",
                            "frontendPortRangeStart": "50000",
                            "frontendPortRangeEnd": "50119",
                            "backendPort": "3389"
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('loadBalancerId'), '/frontendIPConfigurations/loadBalancerFrontEnd')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('loadBalancerId'),'/backendAddressPools/bepool')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[concat(variables('loadBalancerId'),'/probes/tcpProbe')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[parameters('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "priority": 1000,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "[variables('computeApiVersion')]",
            "name": "[parameters('vmssName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
                "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]"
            ],
            "sku": {
                "name": "[parameters('vmSku')]",
                "tier": "Standard",
                "capacity": "[int(parameters('instanceCount'))]"
            },
            "zones": "[parameters('zones')]",
            "properties": {
                "overprovision": "true",
                "upgradePolicy": {
                    "mode": "[parameters('upgradeMode')]"
                },
                "singlePlacementGroup": "[parameters('singlePlacementGroup')]",
                "virtualMachineProfile": {
                    "storageProfile": {
                        "imageReference": "[parameters('image')]",
                        "osDisk": {
                            "createOption": "fromImage",
                            "caching": "ReadWrite"
                        }
                    },
                    "priority": "[parameters('priority')]",
                    "osProfile": {
                        "computerNamePrefix": "[variables('namingInfix')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(parameters('vmssName'), 'Nic')]",
                                "properties": {
                                    "primary": "true",
                                    "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(parameters('vmssName'), 'IpConfig')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[parameters('subnetId')]"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[reference(variables('loadBalancerName'), variables('networkApiVersion')).backendAddressPools[0].id]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[reference(variables('loadBalancerName'), variables('networkApiVersion')).inboundNatPools[0].id]"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "networkSecurityGroup": {
                                        "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                                    }
                                }
                            }
                        ]
                    },
                    "evictionPolicy": "[parameters('evictionPolicy')]"
                },
                "zoneBalance": "[parameters('zoneBalance')]",
                "platformFaultDomainCount": "[int(parameters('spreadingAlgorithmPlatformFaultDomainCount'))]"
            }
        }
    ]
}
